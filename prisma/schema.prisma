generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
}

model User {
  id              Int             @id @default(autoincrement())
  userId          String          @unique
  username        String          @unique
  email           String          @unique
  role            Role
  password        String
  theme           Theme           @default(light)
  imageUrl        String          @default("/placeholder-user.jpg")
  createdAt       DateTime        @default(now())
  paused          Boolean         @default(false)
  withdrawn       BigInt          @default(0)
  lastActive      DateTime        @default(now())
  transactions    Transaction[]
  walletAddresses WalletAddress[]
}

model WalletAddress {
  id        Int      @id @default(autoincrement())
  address   String   @unique
  userId    Int
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
}

model Transaction {
  id          Int      @id @default(autoincrement())
  date        DateTime @default(now())
  txid        String   @unique
  beefTx      Json
  vout        Json
  txType      String
  spentStatus Boolean  @default(false)
  testnetFlag Boolean  @default(true)
  amount      BigInt
  userId      String?
  rawTx       Json?
  outputs     Output[]
  user        User?    @relation(fields: [userId], references: [userId])

  @@index([userId, date])
  @@index([txid])
}

model Output {
  id            Int         @id @default(autoincrement())
  transactionId Int
  voutIndex     Int
  address       String
  amount        BigInt
  spentStatus   Boolean     @default(false)
  transaction   Transaction @relation(fields: [transactionId], references: [id])
}

model Wallet {
  id         Int        @id @default(autoincrement())
  address    String     @unique
  privateKey String
  createdAt  DateTime   @default(now())
  balance    BigInt     @default(0)
  lastUsed   DateTime   @default(now())
  type       WalletType @default(master)
}

enum Role {
  user
  admin
}

enum Theme {
  light
  dark
}

enum WalletType {
  master
  hot
  cold
}
