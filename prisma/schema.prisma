generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
}

model User {
  id            Int            @id @default(autoincrement())
  userId        String         @unique // Clerk ID
  username      String         @unique
  email         String         @unique
  imageUrl      String         @default("/placeholder-user.jpg")
  role          Role
  password      String
  theme         Theme          @default(light)
  withdrawn     BigInt         @default(0)
  paused        Boolean        @default(false)
  createdAt     DateTime       @default(now())
  lastActive    DateTime       @default(now())
  walletAddresses WalletAddress[]
  transactions  Transaction[]
}

model WalletAddress {
  id        Int      @id @default(autoincrement())
  address   String   @unique
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
}

model Transaction {
  id          Int      @id @default(autoincrement())
  date        DateTime @default(now())
  txid        String   @unique
  rawTx       Json?
  beefTx      Json
  vout        Json
  txType      String
  spentStatus Boolean  @default(false)
  testnetFlag Boolean  @default(true)
  amount      BigInt
  userId      String?
  user        User?    @relation(fields: [userId], references: [userId])

  @@index([userId, date])
  @@index([txid])
}



model Wallet {
  id         Int      @id @default(autoincrement())
  address    String   @unique
  privateKey String
  type       WalletType @default(master)
  createdAt  DateTime @default(now())
  lastUsed   DateTime @default(now())
  balance    BigInt   @default(0)
}

enum Role {
  user
  admin
}

enum Theme {
  light
  dark
}

enum WalletType {
  master
  hot
  cold
}